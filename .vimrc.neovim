"""""""""""""""""""""""""""""""""""""""
"
" Plugins
"
""""""""""""""""""""""""""""""""""""""""

call plug#begin()


" Find files
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'jesseleite/vim-agriculture'

" Navigate directories
Plug 'preservim/nerdtree'
Plug 'PhilRunninger/nerdtree-visual-selection'
Plug 'Xuyuanp/nerdtree-git-plugin'

" Sessions
Plug 'tpope/vim-obsession'

" Auto pairs
Plug 'jiangmiao/auto-pairs'

" Comments
Plug 'tpope/vim-commentary'

" Git integrations
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rhubarb'
Plug 'airblade/vim-gitgutter'

" Language support
Plug 'sheerun/vim-polyglot'

" Autocompletion
Plug 'shougo/deoplete.nvim'

" Code folding
Plug 'tmhedberg/simpylfold'

" Indentaion level indicators
Plug 'yggdroot/indentline'

" Make it pretty
Plug 'joshdick/onedark.vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'ryanoasis/vim-devicons'

call plug#end()

"""""""""""""""""""""""""""""""""""""""
"
" Plugin Configuration
"
""""""""""""""""""""""""""""""""""""""""

" fzf
let g:fzf_layout = { 'down': '~40%' }
let $FZF_DEFAULT_OPTS="--bind 
            \ctrl-y:preview-up
            \,ctrl-e:preview-down,
            \ctrl-b:preview-page-up
            \,ctrl-f:preview-page-down,
            \ctrl-u:preview-half-page-up
            \,ctrl-d:preview-half-page-down,
            \shift-up:preview-top
            \,shift-down:preview-bottom"

" Auto pairs
func! SetHtmldjangoAutoPairs()
    let b:AutoPairs = deepcopy(g:AutoPairs)
    let b:AutoPairs['%'] = '%'
endfunction
autocmd FileType htmldjango call SetHtmldjangoAutoPairs()

" NERDTree
let NERDTreeIgnore=['__pycache__']
let g:NERDTreeGitStatusShowIgnored = 1

" Gitgutter
set updatetime=100

" Airline
let g:airline_theme='onedark'
let g:airline#extensions#tabline#enabled = 1

" Use deoplete.
let g:deoplete#enable_at_startup = 1
call deoplete#custom#source('_', 'matchers', ['matcher_full_fuzzy'])
call deoplete#custom#option({'camel_case': v:true,})

" simpylfold
set nofoldenable

""""""""""""""""""""""""""""""""""""""""
"
" General
"
""""""""""""""""""""""""""""""""""""""""

" Colors
colorscheme onedark

" Autoreload config on write
autocmd! bufwritepost .vimrc source ~/.config/nvim/init.vim
autocmd! bufwritepost .vimrc.plugless source ~/.config/nvim/init.vim
autocmd! bufwritepost .vimrc.neovim source ~/.config/nvim/init.vim

" Reload config
command Refresh source ~/.config/nvim/init.vim

" We will have lots of issues without this
filetype plugin indent on
syntax enable
set clipboard=unnamed,unnamedplus

" File settings
set noswapfile
set nobackup
set hidden
set autoread
set fileformats=unix,dos,mac
set encoding=utf-8

" Modelines
set modeline
set modelines=10

" Split navigation
set splitbelow
set splitright

" Numbers!
set number

" Tab config
set expandtab tabstop=4 softtabstop=4 shiftwidth=4
set relativenumber

" Backspace config
set backspace=indent,eol,start

" Line width ruler
set colorcolumn=100

" Cursorline
set cursorline

" Remember cursor position
augroup vimrc-remember-cursor-position
  autocmd!
  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
augroup END

" Highlight yanked text
augroup highlight_yank
    autocmd!
    au TextYankPost * silent! lua vim.highlight.on_yank{higroup="IncSearch", timeout=700}
augroup END

" Scroll offset
set scrolloff=3

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

" Split navigation
set splitbelow
set splitright

""""""""""""""""""""""""""""""""""""""""
"
" Keymaps
"
""""""""""""""""""""""""""""""""""""""""

" Follow this leader
let mapleader=','
let maplocalleader='\'

" Searching
nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap <leader>/ :noh<cr>

" File navigation <leader>f
nnoremap <leader>fw :w<CR>
nnoremap <leader>fq :q<CR>
nnoremap <leader>fQ :q!<CR>
nnoremap <leader>ft :NERDTreeToggle<CR>
nnoremap <leader>fo :NERDTreeFind<CR>

" Find files
noremap <leader>ff :Files<CR>
noremap <leader>fg :GFiles<CR>
noremap <leader>fc :GFiles?<CR>
noremap <leader>fh :History<CR>

" Serach <leader>s
noremap <leader>ss <Plug>RgRawSearch
vnoremap <leader>sv <Plug>RgRawVisualSelection
noremap <leader>sw <Plug>RgRawWordUnderCursor
noremap <leader>st :Tags<CR>
noremap <leader>sf :BLines<CR>
noremap <leader>sb :Lines<CR>

" Buffer navigation <leader>b
noremap <leader>bb :Buffer<CR>
noremap <leader>bc :bd<CR>
noremap <leader>bn :bn<CR>
noremap <leader>bp :bp<CR>

" Split navigation
noremap <leader>x :<C-u>split<CR>
noremap <leader>v :<C-u>vsplit<CR>
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l
noremap <C-h> <C-w>h

" Git <leader>g
noremap <leader>gg :Git<CR>
noremap <leader>gb :Git blame<CR>
noremap <leader>gd :Git diff<CR>
noremap <leader>gl :Git log<CR>
noremap <leader>gh :GBrowse!<CR>
vnoremap <leader>gh :'<,'>GBrowse!<CR>

" TODO: find a mapping for git commit searches
" noremap <leader>gg :Commits<CR>
" noremap <leader>gh :BCommits<CR>

" Hunks <leader>g
noremap ]h <Plug>(GitGutterNextHunk)
noremap [h <Plug>(GitGutterPrevHunk)
command! Gqf GitGutterQuickFix | copen
command! Gqfcf GitGutterQuickFixCurrentFile | copen
noremap <leader>hl :Gqfcf<CR>
noremap <leader>hL :Gqf<CR>
noremap <leader>hp :GitGutterPreviewHunk<CR>
noremap <leader>hs :GitGutterStageHunk<CR>
noremap <leader>hu :GitGutterUndoHunk<CR>

" Quickfix list <leader>q
nnoremap <leader>qq :copen<CR>
nnoremap <leader>qc :cclose<CR>

" Vim config <leader>v ?
noremap <leader>vv :Commands<CR>
noremap <leader>vm :Maps<CR>
noremap <leader>vh :Helptags<CR>
noremap <leader>vr :Refresh<CR>
noremap <leader>vi :PlugInstall<CR>
noremap <leader>vi :PlugInstall<CR>
noremap <leader>vu :PlugUpdate<CR>
noremap <leader>vc :PlugClean<CR>

" Maintain visual mode after shifting
vmap < <gv
vmap > >gv

" Move visual block
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

"""""""""""""""""""""""""""""""""""""""
"
" Testing
"
""""""""""""""""""""""""""""""""""""""""

